{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.cartData = new BehaviorSubject([]);\n  }\n  get getCart() {\n    return this.cartData.asObservable();\n  }\n  addDataInCart(product) {\n    this.getCart.subscribe({\n      next: data => {\n        let result = data.find(p => p.title == product.title);\n        if (result == undefined) {\n          data.push(product);\n          this.cartData.next(data);\n          alert(\"Item added to cart! :)\");\n        } else {\n          alert(\"Item already in cart! :)\");\n        }\n      },\n      error: error => {},\n      complete: () => {}\n    });\n  }\n  removeDataInCart(product) {}\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)();\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAMtC,OAAM,MAAOC,WAAW;EAItBC;IAFQ,aAAQ,GAAG,IAAIF,eAAe,CAAS,EAAE,CAAC;EAElC;EAEhB,IAAIG,OAAO;IACT,OAAO,IAAI,CAACC,QAAQ,CAACC,YAAY,EAAE;EACrC;EAEAC,aAAa,CAACC,OAAW;IACvB,IAAI,CAACJ,OAAO,CAACK,SAAS,CAAC;MACrBC,IAAI,EAAEC,IAAQ,IAAG;QACf,IAAIC,MAAM,GAAGD,IAAI,CAACE,IAAI,CAAEC,CAAK,IAAGA,CAAC,CAACC,KAAK,IAAEP,OAAO,CAACO,KAAK,CAAC;QACvD,IAAGH,MAAM,IAAII,SAAS,EAAC;UACrBL,IAAI,CAACM,IAAI,CAACT,OAAO,CAAC;UAClB,IAAI,CAACH,QAAQ,CAACK,IAAI,CAACC,IAAI,CAAC;UACxBO,KAAK,CAAC,wBAAwB,CAAC;SAChC,MAAI;UACHA,KAAK,CAAC,0BAA0B,CAAC;;MAErC,CAAC;MACDC,KAAK,EAAEA,KAAS,IAAG,CAEnB,CAAC;MACDC,QAAQ,EAAC,MAAI,CAEb;KACD,CAAC;EACJ;EAEAC,gBAAgB,CAACb,OAAW,GAE5B;;AAjCWN,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFV;AAAM","names":["BehaviorSubject","CartService","constructor","getCart","cartData","asObservable","addDataInCart","product","subscribe","next","data","result","find","p","title","undefined","push","alert","error","complete","removeDataInCart","factory","providedIn"],"sourceRoot":"","sources":["/Users/baron/Desktop/COMPUTER SCIENCE/eCommerce/user-dashboard/src/app/components/cart/cart service/cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Cart } from 'src/app/model/cart';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  private cartData = new BehaviorSubject<Cart[]>([]);\n\n  constructor() { }\n\n  get getCart(){\n    return this.cartData.asObservable();\n  }\n\n  addDataInCart(product:any){\n    this.getCart.subscribe({\n      next:(data:any)=>{\n        let result = data.find((p:any)=>p.title==product.title)\n        if(result == undefined){\n          data.push(product);\n          this.cartData.next(data);\n          alert(\"Item added to cart! :)\");\n        }else{\n          alert(\"Item already in cart! :)\");\n        }\n      },\n      error:(error:any)=>{\n\n      },\n      complete:()=>{\n\n      }\n    })\n  }\n\n  removeDataInCart(product:any){\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}