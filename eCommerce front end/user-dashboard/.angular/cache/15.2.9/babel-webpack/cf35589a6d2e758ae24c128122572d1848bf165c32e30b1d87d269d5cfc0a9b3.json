{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrdersService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    // private baseUrl:string = \"http://localhost:3000/orders\";\n    this.baseUrl = \"http://localhost:8080/phase2-backend-restapi/OrdersController\";\n  }\n  loadAllOrders() {\n    return this.httpClient.get(this.baseUrl);\n  }\n  placeOrder(order) {\n    return this.httpClient.post(this.baseUrl, order);\n  }\n  deleteOrderById(id) {\n    return this.httpClient.delete(this.baseUrl + \"/\" + id);\n  }\n  viewOrders(email) {\n    return this.httpClient.get(this.baseUrl + \"/\" + email);\n  }\n}\nOrdersService.ɵfac = function OrdersService_Factory(t) {\n  return new (t || OrdersService)(i0.ɵɵinject(i1.HttpClient));\n};\nOrdersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OrdersService,\n  factory: OrdersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAIxBC,YAAmBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAF7B;IACM,YAAO,GAAU,+DAA+D;EAC1C;EAG5CC,aAAa;IACX,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAW,IAAI,CAACC,OAAO,CAAC;EACpD;EAEAC,UAAU,CAACC,KAAY;IACrB,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,IAAI,CAACH,OAAO,EAAEE,KAAK,CAAC;EAClD;EAEAE,eAAe,CAACC,EAAM;IACpB,OAAO,IAAI,CAACR,UAAU,CAACS,MAAM,CAAC,IAAI,CAACN,OAAO,GAAC,GAAG,GAACK,EAAE,CAAC;EACpD;EAEAE,UAAU,CAACC,KAAS;IAClB,OAAO,IAAI,CAACX,UAAU,CAACE,GAAG,CAAC,IAAI,CAACC,OAAO,GAAC,GAAG,GAACQ,KAAK,CAAC;EACpD;;AArBWb,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAc,SAAbd,aAAa;EAAAe,YAFZ;AAAM","names":["OrdersService","constructor","httpClient","loadAllOrders","get","baseUrl","placeOrder","order","post","deleteOrderById","id","delete","viewOrders","email","factory","providedIn"],"sourceRoot":"","sources":["/Users/baron/Desktop/COMPUTER SCIENCE/eCommerce/user-dashboard/src/app/components/orders/orders-list/orders.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Orders } from './orders';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n\n  // private baseUrl:string = \"http://localhost:3000/orders\";\nprivate baseUrl:string = \"http://localhost:8080/phase2-backend-restapi/OrdersController\";\n  constructor(public httpClient:HttpClient) { }\n\n\n  loadAllOrders(): Observable<Orders[]>{\n    return this.httpClient.get<Orders[]>(this.baseUrl);\n  }\n\n  placeOrder(order:Orders): Observable<any>{\n    return this.httpClient.post(this.baseUrl, order);\n  }\n\n  deleteOrderById(id:any):Observable<any>{\n    return this.httpClient.delete(this.baseUrl+\"/\"+id);\n  }\n\n  viewOrders(email:any):Observable<any>{\n    return this.httpClient.get(this.baseUrl+\"/\"+email);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}