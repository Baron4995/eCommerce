{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductsService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    // private baseUrl:string = \"http://localhost:8080/phase2-backend-restapi/ProductController\";\n    this.baseUrl = \"http://localhost:8282/customer/products/viewAll\";\n  }\n  loadAllProductDetails() {\n    return this.httpClient.get(this.baseUrl);\n  }\n  deleteProductById(id) {\n    return this.httpClient.delete(this.baseUrl + \"/\" + id);\n  }\n}\nProductsService.ɵfac = function ProductsService_Factory(t) {\n  return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsService,\n  factory: ProductsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAM1BC,YAAmBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAJ7B;IAEQ,YAAO,GAAU,iDAAiD;EAE7B;EAE7CC,qBAAqB;IACnB,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAa,IAAI,CAACC,OAAO,CAAC;EACtD;EAEAC,iBAAiB,CAACC,EAAM;IACtB,OAAO,IAAI,CAACL,UAAU,CAACM,MAAM,CAAC,IAAI,CAACH,OAAO,GAAC,GAAG,GAACE,EAAE,CAAC;EACpD;;AAdWP,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAS,SAAfT,eAAe;EAAAU,YAFd;AAAM","names":["ProductsService","constructor","httpClient","loadAllProductDetails","get","baseUrl","deleteProductById","id","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/baron/Desktop/COMPUTER SCIENCE/eCommerce/user-dashboard/src/app/components/products/products-list/products.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Products } from './products';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  // private baseUrl:string = \"http://localhost:8080/phase2-backend-restapi/ProductController\";\n\n  private baseUrl:string = \"http://localhost:8282/customer/products/viewAll\";\n\n  constructor(public httpClient: HttpClient) { }\n\n  loadAllProductDetails(): Observable<Products[]>{\n    return this.httpClient.get<Products[]>(this.baseUrl);\n  }\n\n  deleteProductById(id:any):Observable<any>{\n    return this.httpClient.delete(this.baseUrl+\"/\"+id);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}