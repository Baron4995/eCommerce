{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.loggedIn = new BehaviorSubject(false);\n  }\n  get isLoggedIn() {\n    return this.loggedIn.asObservable();\n  }\n  logout() {\n    return this.loggedIn.next(false);\n  }\n  login() {\n    return this.loggedIn.next(true);\n  }\n  signIn(user) {\n    if (admin.email == \"admin@example.com\" && admin.password == \"admin123456!\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAMlD,OAAM,MAAOC,WAAW;EAItBC;IAFQ,aAAQ,GAAG,IAAIF,eAAe,CAAU,KAAK,CAAC;EAEtC;EAEhB,IAAIG,UAAU;IAEZ,OAAO,IAAI,CAACC,QAAQ,CAACC,YAAY,EAAE;EAErC;EAEAC,MAAM;IACJ,OAAO,IAAI,CAACF,QAAQ,CAACG,IAAI,CAAC,KAAK,CAAC;EAClC;EAEAC,KAAK;IACH,OAAO,IAAI,CAACJ,QAAQ,CAACG,IAAI,CAAC,IAAI,CAAC;EACjC;EAEAE,MAAM,CAACC,IAAS;IAEd,IAAGC,KAAK,CAACC,KAAK,IAAI,mBAAmB,IAAID,KAAK,CAACE,QAAQ,IAAI,cAAc,EAAC;MACxE,OAAO,IAAI;KACZ,MAAI;MACH,OAAO,KAAK;;EAGhB;;AA5BWZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAa,SAAXb,WAAW;EAAAc,YAFV;AAAM","names":["BehaviorSubject","AuthService","constructor","isLoggedIn","loggedIn","asObservable","logout","next","login","signIn","user","admin","email","password","factory","providedIn"],"sourceRoot":"","sources":["/Users/baron/Desktop/COMPUTER SCIENCE/eCommerce/user-dashboard/src/app/auth/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { User } from '../model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private loggedIn = new BehaviorSubject<boolean>(false);\n\n  constructor() { }\n\n  get isLoggedIn():Observable<boolean>{\n    \n    return this.loggedIn.asObservable();\n\n  }\n\n  logout(){\n    return this.loggedIn.next(false);\n  }\n\n  login(){\n    return this.loggedIn.next(true);\n  }\n\n  signIn(user:User):boolean{\n\n    if(admin.email == \"admin@example.com\" && admin.password == \"admin123456!\"){\n      return true;\n    }else{\n      return false;\n    }\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}