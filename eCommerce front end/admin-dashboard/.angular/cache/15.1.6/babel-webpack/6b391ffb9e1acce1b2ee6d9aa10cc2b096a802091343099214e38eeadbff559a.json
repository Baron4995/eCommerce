{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 19);\n    i0.ɵɵtext(2, \"Email is required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 19);\n    i0.ɵɵtext(4, \"Invalid Email\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !(ctx_r0.loginForm.controls[\"emailid\"] == null ? null : ctx_r0.loginForm.controls[\"emailid\"].hasError(\"required\")));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !(ctx_r0.loginForm.controls[\"emailid\"] == null ? null : ctx_r0.loginForm.controls[\"emailid\"].hasError(\"emailid\")));\n  }\n}\nfunction LoginComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 19);\n    i0.ɵɵtext(2, \"Password Required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 19);\n    i0.ɵɵtext(4, \"Password Not Valid\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !(ctx_r1.loginForm.controls[\"password\"] == null ? null : ctx_r1.loginForm.controls[\"password\"].hasError(\"required\")));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !(ctx_r1.loginForm.controls[\"password\"] == null ? null : ctx_r1.loginForm.controls[\"password\"].hasError(\"minlength\")));\n  }\n}\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.msg = \"\";\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      emailid: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [Validators.required, Validators.minLength(6)])\n    });\n  }\n  onSubmit() {\n    let x = this.loginForm.value;\n    // if(this.authService.signIn(x)){\n    //   alert(\"Successfully Login\");\n    //   sessionStorage.setItem(\"x\", x.email);\n    //   this.router.navigate([\"\"]);\n    // }else{\n    //   alert(\"Failure To Login\");\n    // }\n    if (!this.loginForm.get('emailid').valid || !this.loginForm.get('password').valid) {\n      this.msg = \"Please check your email and/or your password\";\n    } else if (this.loginForm.get('emailid').valid && this.loginForm.get('password').valid) {\n      this.msg = \"\";\n    } else {\n      console.log(this.loginForm);\n    }\n    this.authService.signIn(x).subscribe({\n      next: result => {\n        if (result == \"Successfully Logged in\") {\n          console.log(result);\n          alert(\"Successfully Logged in\");\n          console.log(result);\n          sessionStorage.setItem(\"x\", x.email);\n          this.router.navigate([\"\"]);\n        } else {\n          console.log(result);\n          alert(\"Failure To Login\");\n        }\n      },\n      error: error => {\n        console.log(error);\n      },\n      complete: () => {\n        console.log(\"Admin Loggin task done\");\n      }\n    });\n    this.loginForm.reset();\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 39,\n  vars: 4,\n  consts: [[1, \"wrapper\"], [1, \"second-window\", \"container\", \"d-flex\"], [1, \"content\"], [1, \"titulo\"], [1, \"para\"], [1, \"all\", \"container\", \"d-flex\", \"justify-content-center\"], [1, \"login\", 3, \"formGroup\", \"ngSubmit\"], [1, \"title\"], [\"for\", \"inputEmail3\", 1, \"col-sm-2\", \"col-form-label\", \"email\"], [1, \"col-sm-10\"], [\"type\", \"email\", \"id\", \"inputEmail4\", \"placeholder\", \"abc@example.com\", \"formControlName\", \"emailid\", 1, \"form-control\", \"email-input\"], [4, \"ngIf\"], [\"for\", \"inputPassword3\", 1, \"col-sm-2\", \"col-form-label\", \"password\"], [\"type\", \"password\", \"id\", \"inputPassword3\", \"placeholder\", \"********\", \"formControlName\", \"password\", 1, \"form-control\", \"password-input\"], [1, \"check-box\"], [\"type\", \"checkbox\", 1, \"form-check-input\"], [\"for\", \"\", 1, \"fomr-check-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"error-msg\"], [1, \"error\", 3, \"hidden\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n      i0.ɵɵtext(4, \"E-Commerce Store\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"h6\", 3);\n      i0.ɵɵtext(6, \"Admin Dashboard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"p\", 4);\n      i0.ɵɵtext(8, \" Manage Dynamic Content For Your Website \");\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵtext(10, \" An Optimal, Reliable And Dynamic Web Backend \");\n      i0.ɵɵelement(11, \"br\");\n      i0.ɵɵtext(12, \" Modern Secure Interface Based On Google Cloud \");\n      i0.ɵɵelement(13, \"br\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"div\", 5)(15, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_15_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(16, \"fieldset\", 7);\n      i0.ɵɵtext(17, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\")(19, \"label\", 8);\n      i0.ɵɵtext(20, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 9);\n      i0.ɵɵelement(22, \"input\", 10);\n      i0.ɵɵtemplate(23, LoginComponent_div_23_Template, 5, 2, \"div\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\")(25, \"label\", 12);\n      i0.ɵɵtext(26, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 9);\n      i0.ɵɵelement(28, \"input\", 13);\n      i0.ɵɵtemplate(29, LoginComponent_div_29_Template, 5, 2, \"div\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\", 14);\n      i0.ɵɵelement(31, \"input\", 15);\n      i0.ɵɵelementStart(32, \"label\", 16);\n      i0.ɵɵtext(33, \"Remember Me\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"button\", 17);\n      i0.ɵɵtext(35, \"Sign in\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"br\");\n      i0.ɵɵelementStart(37, \"span\", 18);\n      i0.ɵɵtext(38);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", (ctx.loginForm.controls[\"emailid\"] == null ? null : ctx.loginForm.controls[\"emailid\"].invalid) && (ctx.loginForm.controls[\"emailid\"] == null ? null : ctx.loginForm.controls[\"emailid\"].touched));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (ctx.loginForm.controls[\"password\"] == null ? null : ctx.loginForm.controls[\"password\"].invalid) && (ctx.loginForm.controls[\"password\"] == null ? null : ctx.loginForm.controls[\"password\"].touched));\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate(ctx.msg);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\".wrapper[_ngcontent-%COMP%]{display:flex}.wrapper[_ngcontent-%COMP%]   .second-window[_ngcontent-%COMP%], .wrapper[_ngcontent-%COMP%]   .all[_ngcontent-%COMP%]{width:50%;height:100vh}.wrapper[_ngcontent-%COMP%]   .second-window[_ngcontent-%COMP%]{background:linear-gradient(to bottom right,rgb(15,15,197),rgb(20,20,166))}.wrapper.all[_ngcontent-%COMP%]{background:white}.login[_ngcontent-%COMP%]{margin-left:80px;align-self:center;margin-bottom:100px}.form-control[_ngcontent-%COMP%]{max-width:424px;width:30vw;min-width:150px;padding:9px}.title[_ngcontent-%COMP%]{font-weight:700;font-size:25px;margin-bottom:7px;text-align:center}.check-box[_ngcontent-%COMP%]{margin-top:27px;min-width:140px}.btn[_ngcontent-%COMP%]{margin-top:9px;width:30vw;max-width:424px;padding:9px;background-color:#2626f7}.error-msg[_ngcontent-%COMP%]{color:red}.content[_ngcontent-%COMP%]{align-self:center;margin-left:16px;margin-bottom:47}.titulo[_ngcontent-%COMP%]{color:#fff}.para[_ngcontent-%COMP%]{color:#fff;margin-left:0}.email-input.ng-invalid.ng-touched[_ngcontent-%COMP%], .password-input.ng-invalid.ng-touched[_ngcontent-%COMP%]{border-color:red}.error[_ngcontent-%COMP%]{color:red}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}